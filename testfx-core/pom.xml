<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>one.jpro.platform.jpms</groupId>
	<artifactId>${core.artifact.artifactId}</artifactId>
	<packaging>jar</packaging>
	<version>${core.artifact.version}-${core.artifact.release}</version>

	<name>JPro Platform TestFX Core JPMS Module</name>
	<description>A modularized version of TestFX Core, repackaged for use with the JPro platform, enabling headless testing and comprehensive GUI testing support for JavaFX applications with full JPMS compliance.</description>

	<properties>
		<!-- change release here-->
		<core.artifact.groupId>org.testfx</core.artifact.groupId>
		<core.artifact.artifactId>testfx-core</core.artifact.artifactId>
		<core.artifact.version>4.0.18</core.artifact.version>
		<core.artifact.release>jpms</core.artifact.release>

		<!-- transitive dependency versions -->
		<openjfx.version>21.0.4</openjfx.version>
		<hamcrest.version>3.0</hamcrest.version>
		<assertj-core.version>3.26.3</assertj-core.version>
		<osgi.core.version>8.0.0</osgi.core.version>
		<openjfx-monocle.version>21.0.2-jpms</openjfx-monocle.version>
		<junit-jupiter-api.version>5.11.0</junit-jupiter-api.version>
		<mockito-core.version>5.13.0</mockito-core.version>

		<maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
		<maven.moditect.plugin>1.2.2.Final</maven.moditect.plugin>
		<maven.antrun.plugin>3.1.0</maven.antrun.plugin>
		<maven.deploy.plugin>3.1.3</maven.deploy.plugin>
	</properties>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<!-- transitive dependencies of the repackaged artifact -->
	<dependencies>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${openjfx.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-swing</artifactId>
			<version>${openjfx.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${openjfx.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.core</artifactId>
			<version>${osgi.core.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${groupId}</groupId>
			<artifactId>openjfx-monocle</artifactId>
			<version>${openjfx-monocle.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit-jupiter-api.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-core.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<distributionManagement>
		<repository>
			<id>jpro-sandec-repository</id>
			<url>https://sandec.jfrog.io/artifactory/repo</url>
		</repository>
	</distributionManagement>

	<build>
		<resources>
			<resource>
				<directory>${basedir}/</directory>
				<includes>
					<include>LICENSE.txt</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.moditect</groupId>
					<artifactId>moditect-maven-plugin</artifactId>
					<version>${maven.moditect.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven.antrun.plugin}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>sources</id>
						<goals>
							<goal>copy</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${core.artifact.groupId}</groupId>
									<artifactId>${core.artifact.artifactId}</artifactId>
									<version>${core.artifact.version}</version>
									<classifier>sources</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>${core.artifact.groupId}</groupId>
									<artifactId>${core.artifact.artifactId}</artifactId>
									<version>${core.artifact.version}</version>
									<classifier>javadoc</classifier>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${project.build.directory}/dependency/${project.artifactId}-${core.artifact.version}-sources.jar</file>
									<type>jar</type>
									<classifier>sources</classifier>
								</artifact>
								<artifact>
									<file>${project.build.directory}/dependency/${project.artifactId}-${core.artifact.version}-javadoc.jar</file>
									<type>jar</type>
									<classifier>javadoc</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.moditect</groupId>
				<artifactId>moditect-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-module-infos</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>add-module-info</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/moditect</outputDirectory>
							<overwriteExistingFiles>true</overwriteExistingFiles>
							<modules>
								<module>
									<artifact>
										<groupId>${core.artifact.groupId}</groupId>
										<artifactId>${core.artifact.artifactId}</artifactId>
										<version>${core.artifact.version}</version>
									</artifact>
									<moduleInfoSource>
										open module org.testfx.core {
											requires javafx.controls;
											requires javafx.swing;
											requires javafx.fxml;

											requires org.hamcrest;
											requires org.assertj.core;
											requires osgi.core;
											requires org.testfx.monocle;

											exports org.testfx.api;
											exports org.testfx.assertions.api;
											exports org.testfx.internal;
											exports org.testfx.matcher.base;
											exports org.testfx.matcher.control;
											exports org.testfx.osgi;
											exports org.testfx.osgi.service;
											exports org.testfx.robot;
											exports org.testfx.service.adapter;
											exports org.testfx.service.finder;
											exports org.testfx.service.locator;
											exports org.testfx.service.query;
											exports org.testfx.service.support;
											exports org.testfx.toolkit;
											exports org.testfx.util;

											exports org.testfx.assertions.impl to junit;
											exports org.testfx.service.locator.impl to junit;
											exports org.testfx.service.query.impl to junit;
											exports org.testfx.service.finder.impl to junit;
											exports org.testfx.service.adapter.impl to junit;
											exports org.testfx.service.support.impl to junit;
											exports org.testfx.robot.impl to junit;
											exports org.testfx.toolkit.impl to junit;
										}
									</moduleInfoSource>
								</module>
							</modules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>rename-sources</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="renaming sources file" />
								<copy file="${project.build.directory}/dependency/${project.artifactId}-${core.artifact.version}-sources.jar"
									  tofile="${project.build.directory}/${project.artifactId}-${core.artifact.version}-${core.artifact.release}-sources.jar" />
							</target>
						</configuration>
					</execution>
					<execution>
						<id>rename-javadoc</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="renaming javadoc file" />
								<copy file="${project.build.directory}/dependency/${project.artifactId}-${core.artifact.version}-javadoc.jar"
									  tofile="${project.build.directory}/${project.artifactId}-${core.artifact.version}-${core.artifact.release}-javadoc.jar" />
							</target>
						</configuration>
					</execution>
					<execution>
						<phase>prepare-package</phase>
						<configuration>
							<target>
								<echo message="unzipping files" />
								<unzip
									src="${project.build.directory}/moditect/${project.artifactId}-${core.artifact.version}.jar"
									dest="${project.build.directory}/classes/">
								</unzip>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Deploy to Artifactory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven.deploy.plugin}</version>
				<executions>
					<execution>
						<id>deploy-artifact</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
